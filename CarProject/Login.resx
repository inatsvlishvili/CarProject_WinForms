<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCABQALkDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9U6KKKACivLPjp8dY/hBb6Rp+l+H73xr4012SSLSPDOmuiTXP
        loXlkZ3O2ONFHLt3ZQOTXgF9+0N+1zq00i6N+ztpmkx4+VtZ1hHP/kOTmgD7Sor4gk+KH7b11xH8L/BF
        px1+2uf5uaT/AITL9ubZv/4Q3wF/ufanzQB9wVDd3cNjazXNzKkFvChkklkYKqKBkkk9ABXxNH8UP237
        XiT4X+CLvHcXrjP/AI+K8v8Ai98cv2ifir4h8OfATxl4L0jwLe+NZlFxf6LetNL/AGejfv8AjcdgI4zw
        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
</value>
  </data>
</root>